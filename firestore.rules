rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
    	return request.auth != null && request.auth.token.role == 'admin';
    }
    
    function canUpload() {
    	return request.auth != null && (request.auth.token.role == 'uploader' || request.auth.token.role == 'admin' || request.auth.token.role == 'publisher');
    }

    function isAuthorized() {
      return request.auth != null;
    }

    match /users/{userId} {
      allow read, write: if isAuthorized();
    }

    match /images/{document} {
      allow read: if isAuthorized();
      allow write: if (canUpload());
    }
    
    match /lists/{document} {
      allow read: if isAuthorized();
      allow write: if (canUpload());
    }
    
    match /speakers/{document} {
      allow read: if isAuthorized();
      allow write: if (isAdmin());
    }
    
    match /subtitles/{document} {
      allow read: if isAuthorized();
      allow write: if (isAdmin());
    }
    
    match /topics/{document} {
      allow read: if isAuthorized();
      allow write: if (canUpload());
    }
    
    match /transcriptions/{document} {
      allow read: if isAuthorized();
      allow write: if (canUpload());
    }
    
  // Allow read access for admins
    match /sermons/{sermonId} {
      allow read, write: if isAdmin();
    }
    
    // Allow read access for uploaders to their own sermons
    match /sermons/{sermonId} {
      allow read: if resource == null || (canUpload() && resource.data.uploaderId == request.auth.uid);
      allow update, delete: if canUpload() && resource.data.uploaderId == request.auth.uid && resource.data.status.soundCloud != 'UPLOADED' && resource.data.status.subsplash != 'UPLOADED';
      allow create: if canUpload();
    }

    // Collection Groups
    match /{path=**}/sermonLists/{sermonListId} {
      allow read: if isAuthorized();
      allow write: if (canUpload());
    }
    match /{path=**}/listItems/{listItemId} {
      allow read: if isAuthorized();
      allow write: if (canUpload());
    }
  }
}
